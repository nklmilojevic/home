---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: lidarr
  namespace: media
spec:
  interval: 5m
  # renovate: registryUrl=http://bjw-s.github.io/helm-charts/
  chart:
    spec:
      chart: app-template
      version: 3.0.4
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: uninstall
      retries: 3
  values:
    controllers:
      main:
        replicas: 1
        strategy: RollingUpdate
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/lidarr
              tag: 2.1.7.4030
            env:
              TZ: "${TIMEZONE}"
              PUID: "${PUID}"
              PGID: "${PUID}"

    service:
      main:
        controller: main
        ports:
          http:
            port: 8686

    ingress:
      main:
        enabled: true
        className: "nginx"
        annotations:
          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: http://authelia.security.svc.cluster.local/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.milojevic.dev?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
          hajimari.io/icon: mdi:headphones
          # nginx.ingress.kubernetes.io/whitelist-source-range: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</body>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/lidarr/dracula.css"></body>';
            sub_filter_once on;
        hosts:
          - host: &host lidarr.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: main
                  port: http
        tls:
          - hosts:
              - *host

    podSecurityContext:
      runAsUser: 1000
      runAsGroup: 1000
      fsGroup: 1000
      fsGroupChangePolicy: "OnRootMismatch"

    persistence:
      config:
        enabled: true
        existingClaim: lidarr-local-data
      media:
        enabled: true
        existingClaim: nfs-media-pvc
