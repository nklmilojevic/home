---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: omada-ingress
  namespace: network
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/upstream-vhost: "10.5.0.10:8043"
    nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
    nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$1/$2/login"
spec:
  ingressClassName: "internal"
  rules:
    - host: omada.nikola.wtf
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: omada-controller
                port:
                  number: 30077
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: truenas-ingress
  namespace: network
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
spec:
  ingressClassName: "internal"
  rules:
    - host: truenas.nikola.wtf
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: truenas
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: adguard-backup-ingress
  namespace: network
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
spec:
  ingressClassName: "internal"
  rules:
    - host: adguard-backup.nikola.wtf
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: adguard-backup
                port:
                  number: 30004
