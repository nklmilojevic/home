---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/postgresql.cnpg.io/cluster_v1.json
apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: pg16
spec:
  instances: 3
  imageName: ghcr.io/cloudnative-pg/postgresql:16.2-10
  primaryUpdateStrategy: unsupervised
  storage:
    size: 10Gi
    storageClass: openebs-hostpath
  superuserSecret:
    name: cloudnative-pg-secret
  enableSuperuserAccess: true
  postgresql:
    parameters:
      max_connections: "600"
      shared_buffers: 512MB
  monitoring:
    enablePodMonitor: true
  # backup:
  #   retentionPolicy: 7d
  #   barmanObjectStore: &barmanObjectStore
  #     wal:
  #       compression: bzip2
  #       maxParallel: 30
  #     destinationPath: s3://k3s-cloudnative-pg/
  #     endpointURL: https://s3.us-west-002.backblazeb2.com
  #     serverName: postgres
  #     s3Credentials:
  #       accessKeyId:
  #         name: cloudnative-pg-secret
  #         key: aws-access-key-id
  #       secretAccessKey:
  #         name: cloudnative-pg-secret
  #         key: aws-secret-access-key
  # Note: previousCluster needs to be set to the name of the previous
  # cluster when recovering from an existing cnpg cluster
  bootstrap:
    recovery:
      source: postgres
  # Note: externalClusters is needed when recovering from an existing cnpg cluster
  # # Note: externalClusters is needed when recovering from an existing cnpg cluster
  externalClusters:
    - name: postgres
      barmanObjectStore:
        wal:
          compression: bzip2
          maxParallel: 8
        destinationPath: s3://k3s-cloudnative-pg/
        endpointURL: https://s3.us-west-002.backblazeb2.com
        s3Credentials:
          accessKeyId:
            name: cloudnative-pg-secret
            key: aws-access-key-id
          secretAccessKey:
            name: cloudnative-pg-secret
            key: aws-secret-access-key
