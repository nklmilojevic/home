---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: omada
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=http://bjw-s.github.io/helm-charts/
      chart: app-template
      version: 3.0.4
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      omada:
        pod:
          hostNetwork: true
          dnsPolicy: ClusterFirstWithHostNet
        containers:
          app:
            image:
              repository: mbentley/omada-controller
              tag: "5.13"
            env:
              TZ: "Europe/Belgrade"
            # # Enable this when restoring omada from backup file
            # command:
            #   - "/usr/bin/java"
            #   - "-server"
            # args:
            #   - "-Xms128M"
            #   - "-Xmx1024M"
            #   - "-XX:MaxHeapFreeRatio=60"
            #   - "-XX:MinHeapFreeRatio=30"
            #   - "-XX:+HeapDumpOnOutOfMemoryError"
            #   - "-XX:HeapDumpPath=/opt/tplink/EAPController/logs/java_heapdump.hprof"
            #   - "-Djava.awt.headless=true"
            #   - "--add-opens"
            #   - "java.base/java.util=ALL-UNNAMED"
            #   - "-cp"
            #   - "/opt/tplink/EAPController/lib/*::/opt/tplink/EAPController/properties:"
            #   - "com.tplink.smb.omada.starter.OmadaLinuxMain"

    service:
      app:
        controller: omada
        type: LoadBalancer
        annotations:
          metallb.universe.tf/loadBalancerIPs: "10.2.0.11"
        externalTrafficPolicy: Cluster
        ports:
          http:
            port: 8043
    # ingress:
    #   app:
    #     className: "internal"
    #     annotations:
    #       nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #       nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
    #       nginx.ingress.kubernetes.io/use-regex: "true"
    #       nginx.ingress.kubernetes.io/upstream-vhost: "omada.milojevic.dev:8043"
    #       nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
    #       nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$1/$2/login"
    #     hosts:
    #       - host: "omada.milojevic.dev"
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #             service:
    #               identifier: app
    #               port: http
    #     tls:
    #       - hosts:
    #           - "omada.milojevic.dev"

    persistence:
      data:
        existingClaim: omada-data
        globalMounts:
          - path: /opt/tplink/EAPController/data
