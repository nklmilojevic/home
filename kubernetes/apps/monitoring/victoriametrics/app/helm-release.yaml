---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: vmetrics
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      chart: victoria-metrics-k8s-stack
      # renovate: registryUrl=https://victoriametrics.github.io/helm-charts chart=victoria-metrics-single
      version: 0.19.4
      sourceRef:
        kind: HelmRepository
        name: victoriametrics
        namespace: flux-system
  values:
    nameOverride: ""
    fullnameOverride: ""
    tenant: "0"
    argocdReleaseOverride: ""

    grafana:
      enabled: false

    victoria-metrics-operator:
      enabled: true
      cleanupCRD: true
      cleanupImage:
        repository: gcr.io/google_containers/hyperkube
        tag: v1.18.6
        pullPolicy: IfNotPresent

      createCRD: false # we disable crd creation by operator chart as we create them in this chart
      operator:
        disable_prometheus_converter: false

    serviceAccount:
      create: true
      annotations: {}

    defaultRules:
      create: true
      rules:
        etcd: true
        general: false
        k8s: true
        kubeApiserver: true
        kubeApiserverAvailability: true
        kubeApiserverBurnrate: true
        kubeApiserverSlos: true
        kubelet: true
        kubePrometheusGeneral: true
        kubePrometheusNodeRecording: true
        kubernetesApps: true
        kubernetesResources: false
        kubernetesStorage: true
        kubernetesSystem: true
        kubeScheduler: true
        kubeStateMetrics: true
        network: true
        node: true
        vmagent: false
        vmsingle: false
        vmhealth: false
        alertmanager: false

      runbookUrl: https://runbooks.prometheus-operator.dev/runbooks
      appNamespacesTarget: ".*"

    defaultDashboardsEnabled: true
    experimentalDashboardsEnabled: true

    vmsingle:
      annotations: {}
      enabled: true
      # spec for VMSingle crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmsinglespec
      spec:
        retentionPeriod: "14"
        replicaCount: 1
        extraArgs: {}

    alertmanager:
      enabled: true
      annotations: {}
      # spec for VMAlertmanager crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmalertmanagerspec
      spec:
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 200m
            memory: 100Mi
        selectAllByDefault: true
        externalURL: ""
        routePrefix: /

      monzoTemplate:
        enabled: false

      config:
        global:
          resolve_timeout: 5m
        route:
          group_by: ["alertname"]
          group_wait: 1m
          group_interval: 5m
          repeat_interval: 3h
          receiver: devnull
          routes:
            - receiver: blackhole
              matchers:
                - "severity=blackhole"
              continue: false
        receivers:
          - name: devnull
          - name: blackhole

    vmalert:
      enabled: true
      remoteWriteVMAgent: false
      # spec for VMAlert crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmalertspec
      spec:
        selectAllByDefault: true

        evaluationInterval: 15s

    vmagent:
      enabled: true
      # https://docs.victoriametrics.com/operator/api.html#vmagentremotewritespec
      # defined spec will be added to the remoteWrite configuration of VMAgent
      spec:
        resources:
          limits:
            cpu: 2000m
            memory: 500Mi
          requests:
            cpu: 50m
            memory: 200Mi
        inlineScrapeConfig: |
          - job_name: node-exporter
            honor_labels: true
            scrape_interval: 1m
            scrape_timeout: 10s
            metrics_path: /metrics
            scheme: http
            static_configs:
              - targets:
                  - "10.5.0.10:9100"
          - job_name: nut
            honor_labels: true
            scrape_interval: 1m
            scrape_timeout: 10s
            metrics_path: /ups_metrics
            scheme: http
            static_configs:
              - targets:
                  - "nut-exporter:9199"
        selectAllByDefault: true
        scrapeInterval: 25s
        externalLabels:
          cluster: cluster-name
        extraArgs:
          promscrape.streamParse: "true"

    prometheus-node-exporter:
      enabled: true

      podLabels:
        jobLabel: node-exporter
      extraArgs:
        - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
        - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$

      vmServiceScrape:
        enabled: true
        # spec for VMServiceScrape crd
        # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
        spec:
          jobLabel: jobLabel
          endpoints:
            - port: metrics
              metricRelabelConfigs:
                - action: drop
                  source_labels: [mountpoint]
                  regex: "/var/lib/kubelet/pods.+"
    kube-state-metrics:
      enabled: true
      # spec for VMServiceScrape crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
    kubelet:
      enabled: true
      cadvisor: true
      probes: true
      # spec for VMNodeScrape crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmnodescrapespec
      spec:
        scheme: "https"
        honorLabels: true
        interval: "30s"
        scrapeTimeout: "5s"
        tlsConfig:
          insecureSkipVerify: true
          caFile: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
        bearerTokenFile: "/var/run/secrets/kubernetes.io/serviceaccount/token"
        # drop high cardinality label and useless metrics for cadvisor and kubelet
        metricRelabelConfigs:
          - action: labeldrop
            regex: (uid)
          - action: labeldrop
            regex: (id|name)
          - action: drop
            source_labels: [__name__]
            regex: (rest_client_request_duration_seconds_bucket|rest_client_request_duration_seconds_sum|rest_client_request_duration_seconds_count)
        relabelConfigs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - sourceLabels: [__metrics_path__]
            targetLabel: metrics_path
          - targetLabel: "job"
            replacement: "kubelet"

    # -- Component scraping the kube api server
    kubeApiServer:
      enabled: true
      # spec for VMServiceScrape crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
      spec:
        endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            # bearerTokenSecret:
            #   key: ""
            port: https
            scheme: https
            tlsConfig:
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              serverName: kubernetes
        jobLabel: component
        namespaceSelector:
          matchNames:
            - default
        selector:
          matchLabels:
            component: apiserver
            provider: kubernetes

    # -- Component scraping the kube controller manager
    kubeControllerManager:
      enabled: true

      ## If your kube controller manager is not deployed as a pod, specify IPs it can be found on
      ##
      endpoints: []
      # - 10.141.4.22
      # - 10.141.4.23
      # - 10.141.4.24

      ## If using kubeControllerManager.endpoints only the port and targetPort are used
      ##
      service:
        enabled: true
        port: 10252
        targetPort: 10252
        # selector:
        #   component: kube-controller-manager

      # spec for VMServiceScrape crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
      spec:
        jobLabel: jobLabel
        endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            # bearerTokenSecret:
            #   key: ""
            port: http-metrics
            scheme: https
            tlsConfig:
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              serverName: kubernetes

    # -Component scraping kubeDns. Use either this or coreDns
    kubeDns:
      enabled: false

    # -- Component scraping coreDns. Use either this or kubeDns
    coreDns:
      enabled: true
      service:
        enabled: true
        port: 9153
        targetPort: 9153
        selector:
          k8s-app: kube-dns

      # spec for VMServiceScrape crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
      spec:
        endpoints:
          - port: http-metrics
            bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token

    ## Component scraping etcd
    ##
    kubeEtcd:
      enabled: true

      ## If your etcd is not deployed as a pod, specify IPs it can be found on
      ##
      endpoints: []
      # - 10.141.4.22
      # - 10.141.4.23
      # - 10.141.4.24

      ## Etcd service. If using kubeEtcd.endpoints only the port and targetPort are used
      ##
      service:
        enabled: true
        port: 2379
        targetPort: 2379
        # selector:
        #   component: etcd

      # spec for VMServiceScrape crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
      spec:
        jobLabel: jobLabel
        endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            # bearerTokenSecret:
            #   key: ""
            port: http-metrics
            scheme: https
            tlsConfig:
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

    ## Component scraping kube scheduler
    ##
    kubeScheduler:
      enabled: true

      ## If your kube scheduler is not deployed as a pod, specify IPs it can be found on
      ##
      endpoints: []
      # - 10.141.4.22
      # - 10.141.4.23
      # - 10.141.4.24

      ## If using kubeScheduler.endpoints only the port and targetPort are used
      ##
      service:
        enabled: true
        port: 10251
        targetPort: 10251
        # selector:
        #   component: kube-scheduler

      # spec for VMServiceScrape crd
      # https://github.com/VictoriaMetrics/operator/blob/master/docs/api.MD#vmservicescrapespec
      spec:
        jobLabel: jobLabel
        endpoints:
          - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
            # bearerTokenSecret:
            #   key: ""
            port: http-metrics
            scheme: https
            tlsConfig:
              caFile: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
