---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app miniflux
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      miniflux:
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: quay.io/nklmilojevic/postgres-init
              tag: 16.8@sha256:87a54e5501a13dc73a1065cc09f33fa592c01c362077671e4697a4ddc85ccaf7
            envFrom: &envFrom
              - secretRef:
                  name: miniflux-secrets
        containers:
          app:
            image:
              repository: ghcr.io/miniflux/miniflux
              tag: 2.2.5-distroless@sha256:2d566eddfe492cab757d1e9d8c92d083b3cab76c000e52addc707a48c96b993c
            env:
              BASE_URL: https://miniflux.nikola.wtf
              CREATE_ADMIN: "1"
              LOG_DATE_TIME: "1"
              METRICS_ALLOWED_NETWORKS: 10.0.0.0/8
              METRICS_COLLECTOR: "1"
              POLLING_SCHEDULER: entry_frequency
              POLLING_FREQUENCY: "15"
              FORCE_REFRESH_INTERVAL: "1"
              PORT: &port 80
              RUN_MIGRATIONS: "1"
            envFrom: *envFrom
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /healthcheck
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: miniflux
        ports:
          http:
            port: *port
    serviceMonitor:
      app:
        serviceName: miniflux
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s
    ingress:
      app:
        className: internal
        hosts:
          - host: "miniflux.nikola.wtf"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
