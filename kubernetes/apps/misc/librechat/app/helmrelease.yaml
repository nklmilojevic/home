---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app librechat
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      librechat:
        type: deployment
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: &secret librechat-secret
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom: &envFrom
              - secretRef:
                  name: *secret
        containers:
          app:
            image:
              repository: ghcr.io/danny-avila/librechat-dev
              tag: latest@sha256:a5d7771821937a95fa7b3125e51e7848f26d279850da0c2ed65782b90e63d2da
            env: &env
              PORT: "3080"
              NODE_ENV: "development"
              MEILI_HOST: "http://meilisearch.database.svc:7700"
              ALLOW_EMAIL_LOGIN: "true"
              ALLOW_REGISTRATION: "true"
              ALLOW_SOCIAL_LOGIN: "false"
              ALLOW_SOCIAL_REGISTRATION: "false"
              ALLOW_PASSWORD_RESET: "false"
              ALLOW_UNVERIFIED_EMAIL_LOGIN: "true"
              DOMAIN_CLIENT: "https://chat.nikola.wtf"
              DOMAIN_SERVER: "https://chat.nikola.wtf"
              SEARCH: "true"
              LITELLM_API_KEY: "sk--pT24fiJaylgAxJcL0-gZA"
              OPENAI_API_KEY: "sk--pT24fiJaylgAxJcL0-gZA"
            dependsOn:
              - ragapi

            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1000Mi
            probes: &probes
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: false

          # exporter:
          #   dependsOn: app
          #   image:
          #     repository: ghcr.io/wipash/librechatmetrics
          #     tag: latest
          #   env:
          #     PROMETHEUS_PORT: &exporterport "9123"

          ragapi:
            image:
              repository: ghcr.io/danny-avila/librechat-rag-api-dev-lite
              tag: latest@sha256:42ef0aa9a8fa2437eed73648242e01a1c0dbec772dc0da891908e44adbce626a
            envFrom: *envFrom
            env: *env
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            probes: *probes

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: librechat
        ports:
          http:
            port: &port 3080
          # metrics:
          #   port: *exporterport

    persistence:
      config:
        enabled: true
        type: configMap
        name: librechat-config
        advancedMounts:
          librechat:
            app:
              - subPath: librechat.yaml
                path: /app/librechat.yaml

      app-data:
        enabled: true
        type: emptyDir
        advancedMounts:
          librechat:
            app:
              - path: /app/data
              - path: /app/api/data

      tmp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp

      data:
        enabled: true
        existingClaim: *app
        advancedMounts:
          librechat:
            app:
              - subPath: logs
                path: /app/api/logs
              - subPath: images
                path: /app/client/public/images
              - subPath: uploads
                path: /app/uploads
            ragapi:
              - subPath: ragapi
                path: /app/uploads

    route:
      app:
        hostnames:
          - chat.nikola.wtf
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: librechat
                port: *port

    # serviceMonitor:
    #   app:
    #     serviceName: librechat
    #     endpoints:
    #       - port: metrics
    #         scheme: http
    #         path: /
    #         interval: 1m
    #         scrapeTimeout: 30s
